name: 'Leviathan Action'
description: 'Test your software directly on hardware using the Levaithan Testing framework'
runs:
  using: "composite"
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3

    - name: (Virtual) Leviathan build & test 
      working-directory: ${{ env.LEVIATHAN_ROOT }}/
      if: env.WORKER_TYPE == 'qemu'
      shell: bash
      run: |
        make config
        make build
        make local-test QEMU_SECUREBOOT=${QEMU_SECUREBOOT} FLASHER_SECUREBOOT=${FLASHER_SECUREBOOT}

    - name: (Autokit) Leviathan build & test
      working-directory: ${{ env.LEVIATHAN_ROOT }}/
      if: env.WORKER_TYPE == 'testbot' || env.WORKER_TYPE == 'autokit'
      shell: bash
      run: |
        make config
        make build
        make test

    - name: Create Summary 
      shell: bash
      run: |
        echo "### ${TEST_SUITE} Test Report"  >> $GITHUB_STEP_SUMMARY
        
        echo "| Total Tests | Ran | Passed | Failed | Skipped |" >> $GITHUB_STEP_SUMMARY
        echo "|-------|-----|---------|--------|--------|" >> $GITHUB_STEP_SUMMARY
        jq -r '.[0].stats | "\(.tests) 📋 | \(.ran) 🏃 |  \(.passed) ✅ | \(.failed) ❌ | \(.skipped) ⏭️"' ${REPORTS}/final-result.json >> $GITHUB_STEP_SUMMARY
        
        echo "#### Failed Tests" >> $GITHUB_STEP_SUMMARY
        jq -r '.[0].tests | to_entries[] | select(.value == "failed") | .key' ${REPORTS}/final-result.json >> $GITHUB_STEP_SUMMARY

        echo "#### Skipped Tests" >> $GITHUB_STEP_SUMMARY
        jq -r '.[0].tests | to_entries[] | select(.value == "skipped") | .key' ${REPORTS}/final-result.json >> $GITHUB_STEP_SUMMARY

    - uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4
      with:
        name: reports-${{ env.WORKER_TYPE }}-${{ env.DEVICE_TYPE }}-${{ env.TEST_SUITE }}
        path: ${{ env.REPORTS }}

    - name: Teardown
      shell: bash
      working-directory: ${{ env.LEVIATHAN_ROOT }} 
      run: |
        make down
