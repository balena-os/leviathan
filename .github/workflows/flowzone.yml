name: Flowzone

on:
  pull_request:
    types: [opened, synchronize, closed]
    branches: [main, master]

permissions:
  contents: read
  packages: write # Allow Flowzone to publish to ghcr.io

jobs:
  flowzone:
    name: Flowzone
    uses: product-os/flowzone/.github/workflows/flowzone.yml@master
    # prevent duplicate workflow executions for pull_request and pull_request_target
    if: |
      (
        github.event.pull_request.head.repo.full_name == github.repository &&
        github.event_name == 'pull_request'
      ) || (
        github.event.pull_request.head.repo.full_name != github.repository &&
        github.event_name == 'pull_request_target'
      )
    secrets: inherit
    with:
      docker_images: ghcr.io/${{ github.repository }}
      bake_targets: client,core

  e2e:
    needs: [flowzone]
    if: |
      ((github.event.pull_request.head.repo.full_name == github.repository && github.event_name == 'pull_request') ||
      (github.event.pull_request.head.repo.full_name != github.repository && github.event_name == 'pull_request_target')) &&
      github.event.action != 'closed'
    runs-on: ["self-hosted", "X64", "kvm"]
    environment: ${{ matrix.ENVIRONMENT_URL }}

    env:
      SUITES: ./suites
      REPORTS: ./reports
      WORKSPACE: ./workspace
      LEVIATHAN_ROOT: ./
      BALENACLOUD_ORG: testbot
      BALENACLOUD_APP_NAME: balena/testbot-rig
      WORKER_TYPE: ${{ matrix.WORKER_TYPE }}
      DEVICE_TYPE: ${{ matrix.DEVICE_TYPE }}
      # Used to pull pre-built client and core images
      CLIENT_TAG: build-${{ github.event.pull_request.head.sha }}-client
      CORE_TAG: build-${{ github.event.pull_request.head.sha }}-core

    defaults:
      run:
        working-directory: .
        shell: bash --noprofile --norc -eo pipefail -x {0}

    strategy:
      fail-fast: false
      matrix:
        include:
          - DEVICE_TYPE: genericx86-64-ext
            WORKER_TYPE: qemu
            ENVIRONMENT_URL: balena-cloud.com
          - DEVICE_TYPE: generic-amd64
            WORKER_TYPE: qemu
            ENVIRONMENT_URL: balena-cloud.com
          - DEVICE_TYPE: generic-aarch64
            WORKER_TYPE: qemu
            ENVIRONMENT_URL: bm.balena-dev.com
          - DEVICE_TYPE: raspberrypi3
            WORKER_TYPE: testbot
            ENVIRONMENT_URL: bm.balena-dev.com

    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          submodules: true
          persist-credentials: false
          fetch-tags: true

      - name: Copy suite config
        run: cp -a ${{ env.SUITES }}/config.js ${{ env.WORKSPACE }}/config.js

      - name: Leviathan build + test
        uses: ./
        env:
          BALENACLOUD_API_KEY: ${{ secrets.BALENA_API_TEST_KEY }}
          BALENACLOUD_API_URL: ${{ vars.BALENA_HOST || matrix.ENVIRONMENT_URL }}
          BALENACLOUD_SSH_PORT: ${{ vars.BALENACLOUD_SSH_PORT }}
          BALENACLOUD_SSH_URL: ${{ vars.BALENACLOUD_SSH_URL }}
          DEVICE_TYPE: ${{ matrix.DEVICE_TYPE }}
          WORKER_TYPE: ${{ matrix.WORKER_TYPE }}
          QEMU_CPUS: 1
          QEMU_MEMORY: "1G"
          TEST_SUITE: e2e
          BALENACLOUD_APP_NAME: ${{ env.BALENACLOUD_APP_NAME }}
          BALENACLOUD_ORG: ${{ env.BALENACLOUD_ORG }}
          LEVIATHAN_ROOT: ${{ env.LEVIATHAN_ROOT }}
          REPORTS: ${{ env.REPORTS }}
          SUITES: ${{ env.SUITES }}
          WORKSPACE: ${{ env.WORKSPACE }}
