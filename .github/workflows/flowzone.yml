name: Flowzone

on:
  pull_request:
    types: [opened, synchronize, closed]
    branches: [main, master]
  # allow external contributions to use secrets within trusted code
  pull_request_target:
    types: [opened, synchronize, closed]
    branches: [main, master]

jobs:
  flowzone:
    name: Flowzone
    uses: product-os/flowzone/.github/workflows/flowzone.yml@master
    # prevent duplicate workflows and only allow one `pull_request` or `pull_request_target` for
    # internal or external contributions respectively
    if: |
      (github.event.pull_request.head.repo.full_name == github.repository && github.event_name == 'pull_request') ||
      (github.event.pull_request.head.repo.full_name != github.repository && github.event_name == 'pull_request_target')
    secrets: inherit

  e2e:
    needs: [flowzone]
    if: |
      ((github.event.pull_request.head.repo.full_name == github.repository && github.event_name == 'pull_request') ||
      (github.event.pull_request.head.repo.full_name != github.repository && github.event_name == 'pull_request_target')) &&
      github.event.action != 'closed'
    runs-on: ubuntu-22.04

    env:
      SUITES: ./suites
      REPORTS: ./reports
      WORKSPACE: ./workspace
      BALENACLOUD_ORG: testbot
      BALENACLOUD_API_KEY: ${{ secrets.BALENA_TOKEN }}
      BALENACLOUD_APP_NAME: balena/testbot-rig
      QEMU_CPUS: 1
      QEMU_MEMORY: 1G
      WORKER_TYPE: ${{ matrix.WORKER_TYPE }}
      DEVICE_TYPE: ${{ matrix.DEVICE_TYPE }}

    defaults:
      run:
        working-directory: .
        shell: bash --noprofile --norc -eo pipefail -x {0}

    strategy:
      fail-fast: false
      matrix:
        include:
          - DEVICE_TYPE: genericx86-64-ext
            WORKER_TYPE: qemu
          - DEVICE_TYPE: generic-amd64
            WORKER_TYPE: qemu
          - DEVICE_TYPE: generic-aarch64
            WORKER_TYPE: qemu
          - DEVICE_TYPE: raspberrypi3
            WORKER_TYPE: testbot

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Copy suite config
        run: cp -a ${{ env.SUITES }}/config.js ${{ env.WORKSPACE }}/config.js

      - name: Build leviathan images
        run: |
          make build
      
      - name: Run test suite
        run: |
          make config
          make test

      - uses: actions/upload-artifact@v3
        with:
          name: reports-${{ env.WORKER_TYPE }}-${{ env.DEVICE_TYPE }}
          path: ${{ env.REPORTS }}
